// --- stack

@mixin stack($space: 1.5rem, $recursive: false, $split-after: null) {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;

	& > * {
		margin-block: 0;
	}

	@if $recursive {
		& * + * {
			margin-block-start: $space;
		}
	} @else {
		& > * + * {
			margin-block-start: $space;
		}
	}

	@if $split-after {
		& > :nth-child($split-after) {
			margin-block-end: auto;
		}
	}
}

// --- cluster

@mixin cluster($justify: 'flex-start', $align: 'flex-start', $space: 1rem) {
	display: flex;
	flex-wrap: wrap;
	gap: $space;
	justify-content: $justify;
	align-items: $align;
}

// --- sidebar

@mixin _with-sidebar__sidebar($basis) {
	@if $basis {
		flex: 1;
	} @else {
		flex: 1 $basis;
	}
}

@mixin _with-sidebar__other($width) {
	flex: 999 0;
	@if $width {
		min-inline-size: $width;
	}
}

@mixin with-sidebar(
	$left: true,
	$side-width: null,
	$content-min: 50%,
	$space: 1rem,
	$no-stretch: false
) {
	display: flex;
	flex-wrap: wrap;
	gap: $space;
	@if $no-stretch {
		align-items: flex-start;
	}

	@if $left {
		& > :first-child {
			@include _with-sidebar__sidebar($side-width);
		}

		& > :last-child {
			@include _with-sidebar__other($content-min);
		}
	} @else {
		& > :first-child {
			@include _with-sidebar__other($content-min);
		}

		& > :last-child {
			@include _with-sidebar__sidebar($side-width);
		}
	}
}

// --- switcher

@mixin switcher($min-inline-size, $space: 1rem, $limit: 4) {
	$over-limit: $limit + 1;

	display: flex;
	flex-wrap: wrap;
	gap: $space;

	// When flex container width drops below
	//   $min-inline-size
	// items are laid out vertically instead of horizontally
	& > * {
		flex: 1 max(0px, calc(($min-inline-size - 100%) * 999));
	}

	// Force vertical layout when there are more than
	//   $limit
	// items
	& > :nth-last-child(n + #{$over-limit}),
	& > :nth-last-child(n + #{$over-limit}) ~ * {
		flex-basis: 100%;
	}
}

// --- cover
@mixin cover(
	$centered: 'h1',
	$space: 1rem,
	$min-height: 100vh,
	$no-pad: false
) {
	display: flex;
	flex-direction: column;
	min-block-size: $min-height;
	padding: if($no-pad, 0, $space);

	& > * {
		margin-block: $space;
	}

	& > :first-child:not(#{$centered}) {
		margin-block-start: 0;
	}

	& > :last-child:not(#{$centered}) {
		margin-block-end: 0;
	}

	& > #{$centered} {
		margin-block: auto;
	}
}

// --- grid

@mixin grid($min-column-width: 250px, $space: 1rem) {
	display: grid;
	gap: $space;

	@supports (inline-size: min($min-column-width, 100%)) {
		& {
			grid-template-columns: repeat(
				auto-fit,
				minmax(min($min-column-width, 100%), 1fr)
			);
		}
	}
}

// --- frame

@mixin frame($n: 16, $d: 9, $position: null) {
	aspect-ratio: #{$n} / #{$d};
	overflow: hidden;
	display: flex;
	justify-content: center;
	align-items: center;

	& > img,
	& > video {
		inline-size: 100%;
		block-size: 100%;
		object-fit: cover;
		@if ($position) {
			object-position: #{$position};
		}
	}
}
